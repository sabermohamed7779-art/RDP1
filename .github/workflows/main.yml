
الاسم: RDP

على:
  سير العمل_الإرسال:

الوظائف:
  secure-rdp:
    يعمل على: أحدث إصدار من Windows
    دقائق المهلة: 3600

    خطوات:
      - الاسم: تكوين إعدادات Core RDP
        تشغيل: |
          # تمكين سطح المكتب البعيد وتعطيل مصادقة مستوى الشبكة (إذا لزم الأمر)
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
                             -الاسم "fDenyTSConnections" -القيمة 0 -القوة
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                             -الاسم "مصادقة المستخدم" -القيمة 0 -القوة
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                             -الاسم "SecurityLayer" -القيمة 0 -القوة

          # قم بإزالة أي قاعدة موجودة بنفس الاسم لتجنب التكرار
          netsh advfirewall firewall حذف القاعدة name="RDP-Tailscale"
          
          # للاختبار، اسمح بأي اتصال وارد على المنفذ 3389
          netsh advfirewall firewall add rule name="RDP-Tailscale" `
            dir=في العمل=السماح للبروتوكول=TCP localport=3389

          # (اختياري) أعد تشغيل خدمة سطح المكتب البعيد للتأكد من سريان التغييرات
          إعادة تشغيل الخدمة - اسم TermService - فرض

      - الاسم: إنشاء مستخدم RDP بكلمة مرور آمنة
        تشغيل: |
          إضافة نوع -AssemblyName System.Security
          $charSet = @{
              العلوي = [char[]](65..90) # AZ
              Lower = [char[]](97..122) # az
              الرقم = [char[]](48..57) # 0-9
              خاص = ([char[]](33..47) + [char[]](58..64) +
                         [char[]](91..96) + [char[]](123..126)) # أحرف خاصة
          }
          $rawPassword = @()
          $rawPassword += $charSet.Upper | الحصول على عشوائي - العدد 4
          $rawPassword += $charSet.Lower | الحصول على عشوائي - العدد 4
          $rawPassword += $charSet.Number | الحصول على عشوائي - العدد 4
          $rawPassword += $charSet.Special | الحصول على عشوائي - العدد 4
          $password = -join ($rawPassword | Sort-Object { Get-Random })
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          مستخدم محلي جديد - الاسم "RDP" - كلمة المرور $securePass - الحساب لا ينتهي أبدًا
          إضافة عضو المجموعة المحلية - المجموعة "المسؤولون" - العضو "RDP"
          إضافة عضو المجموعة المحلية - مجموعة "مستخدمي سطح المكتب البعيد" - عضو "RDP"
          
          صدى "RDP_CREDS=المستخدم: RDP | كلمة المرور: $password" >> $env:GITHUB_ENV
          
          إذا (-لا (الحصول على اسم المستخدم المحلي "RDP")) {
              خطأ الكتابة "فشل إنشاء المستخدم"
              مخرج 1
          }

      - الاسم: تثبيت Tailscale
        تشغيل: |
          $tsUrl = " https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi "
          $installerPath = "$env:TEMP\tailscale.msi"
          
          استدعاء طلب الويب -Uri $tsUrl -OutFile $installerPath
          بدء عملية msiexec.exe - قائمة الحجج "/i"، "`"$installerPath`""، "/quiet"، "/norestart" - الانتظار
          إزالة العنصر $installerPath -Force

      - الاسم: إنشاء اتصال Tailscale
        تشغيل: |
          # قم بتشغيل Tailscale باستخدام مفتاح المصادقة المقدم وقم بتعيين اسم مضيف فريد
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner-$env:GITHUB_RUN_ID
          
          # انتظر حتى يقوم Tailscale بتعيين عنوان IP
          $tsIP = $null
          $retries = 0
          بينما (-ليس $tsIP -و $retries -lt 10) {
              $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
              البدء - النوم - 5 ثوانٍ
              $إعادة المحاولة++
          }
          
          إذا (-ليس $tsIP) {
              خطأ الكتابة "لم يتم تعيين عنوان IP الخاص بـ Tailscale. الخروج."
              مخرج 1
          }
          صدى "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV
      
      - الاسم: التحقق من إمكانية الوصول إلى RDP
        تشغيل: |
          كتابة المضيف "Tailscale IP: $env:TAILSCALE_IP"
          
          # اختبار الاتصال باستخدام Test-NetConnection مقابل عنوان IP Tailscale على المنفذ 3389
          $testResult = Test-NetConnection -ComputerName $env:TAILSCALE_IP -Port 3389
          إذا (-ليس $testResult.TcpTestSucceeded) {
              خطأ الكتابة "فشل اتصال TCP بمنفذ RDP 3389"
              مخرج 1
          }
          كتابة المضيف "اتصال TCP ناجح!"

      - الاسم: الحفاظ على الاتصال
        تشغيل: |
          كتابة المضيف "`n=== RDP ACCESS ==="
          كتابة المضيف "العنوان: $env:TAILSCALE_IP"
          كتابة المضيف "اسم المستخدم: RDP"
          كتابة المضيف "كلمة المرور: $(echo $env:RDP_CREDS)"
          كتابة المضيف "==================`n"
          
          # إبقاء العداء نشطًا إلى أجل غير مسمى (أو حتى يتم إلغاؤه يدويًا)
          بينما ($true) {
              Write-Host "[$(Get-Date)] RDP نشط - استخدم Ctrl+C في سير العمل لإنهاء العمل"
              بدء النوم - 300 ثانية
          }
